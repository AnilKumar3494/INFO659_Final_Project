# Define variables
vars <- c(
high_school = "B06009_003E",
total_households = "B05010_001E",
below_poverty = "B05010_002E"
)
year <- 2014
# Retrieve ACS Data
census_data <- get_acs(
geography = "state",
variables = vars,
year = year,
survey = "acs5"
)
# Display first few rows
kable(head(census_data), caption = "Raw Census Data")
# For checking the variable names
print("Unq Variable names in census data:")
unique(census_data$variable)
# Pivot and calculate poverty rate
census_wide <- census_data %>%
select(GEOID, NAME, variable, estimate) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
mutate(poverty_rate = B05010_002 / B05010_001)
# Display first few rows of processed data
print("Few Rows of Processed Census Data with Poverty Rate:")
kable(head(census_wide), caption = "Few Rows of Processed Census Data with Poverty Rate")
# Numerical description of poverty rates
print("Summary Statistics for State Poverty Rates:")
summary(census_wide$poverty_rate)
# Table showing poverty rate for each state
poverty_rate_table <- census_wide %>%
select(NAME, poverty_rate) %>%
arrange(desc(poverty_rate)) # Arrange for better readability
kable(poverty_rate_table, caption = "Poverty Rate by State (2014)")
#Bar Plot of Poverty Rate by State
ggplot(census_wide, aes(x = reorder(NAME, poverty_rate), y = poverty_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = paste0("Poverty Rate by State (", year, " ACS5)"),
x = "State", y = "Poverty Rate") +
theme_minimal()
# Scatter Plot of High School Graduates vs. Poverty Rate
ggplot(census_wide, aes(x = B06009_003, y = poverty_rate)) +
geom_point(color = "darkred", size = 3, alpha = 0.7) +
labs(title = paste0("High School Attainment vs Poverty Rate (", year, " ACS5)"),
x = "High School Graduates",
y = "Poverty Rate") +
theme_minimal()
# Load GHDx Meningitis data
file_path <- "./IHME_USA_COUNTY_INFECT_DIS_MORT_1980_2014_NATIONAL_Y2018M03D27.XLSX"
mg_raw <- read_xlsx(file_path, sheet = 'Meningitis', skip = 1)
# Print the column names of mg_raw for checking
print("Column names in raw meningitis data:")
print(names(mg_raw))
# Select only state-level data (FIPS < 100)
# Filter state-level and clean
mg_states_cleaned <- mg_raw %>%
filter(FIPS < 100) %>%
rename(State = Location) %>%
mutate(MR_2014 = as.numeric(str_remove(`Mortality Rate, 2014*`, '\\s*\\(.*\\)')))
# Display the first few rows of the cleaned state-level Meningitis data
kable(head(mg_states_cleaned), caption = "Cleaned State-Level Meningitis Mortality Data")
# # Poverty vs. Disease Correlation Plots
# ggplot(merged, aes(x = poverty_rate, y = MR_2014)) +
#   geom_point(color = "purple") +
#   geom_smooth(method = "lm", se = TRUE, color = "blue") +
#   labs(title = "Poverty Rate vs. Meningitis Mortality Rate (2014)", x = "Poverty Rate", y = "Meningitis Mortality") +
#   theme_minimal()
# Histogram of Meningitis Mortality
ggplot(mg_states_cleaned, aes(x = MR_2014)) +
geom_histogram(fill = "darkred", bins = 15) +
labs(title = "Distribution of Meningitis Mortality Rate (2014)", x = "Mortality Rate", y = "Count") +
theme_minimal()
# Merge and scatter plot with smooth line
merged_meningitis <- census_wide %>%
inner_join(mg_states_cleaned, by = c("NAME" = "State"))
# Scatter plot
ggplot(merged_meningitis, aes(x = poverty_rate, y = MR_2014)) +
geom_point(color = "purple") +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Poverty vs Meningitis Mortality (2014)", x = "Poverty Rate", y = "Meningitis Mortality") +
theme_minimal()
# Correlation with bootstrap CI
boot_cor <- function(data, indices) {
d <- data[indices, ]
cor(d$poverty_rate, d$MR_2014, use = "complete.obs")
}
boot_results <- boot(data = merged_meningitis, statistic = boot_cor, R = 1000)
boot.ci(boot_results, type = "perc")
# Load Diarrheal data
dd_raw <- read_xlsx(file_path, sheet = 'Diarrheal diseases', skip = 1)
dd_cleaned <- dd_raw %>%
filter(FIPS < 100) %>%
rename(State = Location) %>%
mutate(MR_2014 = as.numeric(str_remove(`Mortality Rate, 2014*`, '\\s*\\(.*\\)')))
merged_diarrhea <- census_wide %>%
inner_join(dd_cleaned, by = c("NAME" = "State"))
ggplot(merged_diarrhea, aes(x = poverty_rate, y = MR_2014)) +
geom_point(color = "darkorange") +
geom_smooth(method = "lm", color = "black") +
labs(title = "Poverty vs Diarrheal Mortality (2014)", x = "Poverty Rate", y = "Diarrheal Mortality") +
theme_minimal()
# Correlation
boot_results_dd <- boot(data = merged_diarrhea, statistic = boot_cor, R = 1000)
boot.ci(boot_results_dd, type = "perc")
infant_file <- "./infant_mortality_data.csv"
infant_raw <- read_csv(infant_file)
infant_2014 <- infant_raw %>%
filter(YEAR == 2014) %>%
select(STATE, RATE) %>%
rename(State_Abbr = STATE, Infant_Mortality_Rate = RATE)
fips_df <- fips_codes %>% distinct(state, state_code, state_name)
infant_fips <- infant_2014 %>%
left_join(fips_df, by = c("State_Abbr" = "state")) %>%
select(state_name, state_code, Infant_Mortality_Rate) %>%
rename(State = state_name, FIPS = state_code)
# Merge with poverty
merged_infant <- census_wide %>%
inner_join(infant_fips, by = c("GEOID" = "FIPS"))
glimpse(merged_infant)
merged_infant_numeric <- merged_infant %>%
mutate(Infant_Mortality_Rate = as.numeric(Infant_Mortality_Rate))
ggplot(merged_infant_numeric, aes(x = poverty_rate, y = Infant_Mortality_Rate)) +
geom_point(color = "orange") +
geom_smooth(method = "lm", color = "darkgreen") +
labs(title = "Poverty vs Infant Mortality (2014)", x = "Poverty Rate", y = "Infant Mortality Rate") +
theme_minimal()
cor.test(merged_infant_numeric$poverty_rate, merged_infant_numeric$Infant_Mortality_Rate)
# Numerical description
print("Summary Statistics for State Infant Mortality Rates:")
summary(merged_infant_numeric$Infant_Mortality_Rate)
# (Histogram)
ggplot(merged_infant_numeric, aes(x = Infant_Mortality_Rate)) +
geom_histogram(fill = "lightblue", bins = 15) +
labs(title = "Distribution of Infant Mortality Rate (2014)", x = "Infant Mortality Rate", y = "Count") +
theme_minimal()
# Quantify the relationship with bootstrapped confidence intervals (Remaining part of Step 4)
boot_cor_infant <- function(data, indices) {
d <- data[indices, ]
cor(d$poverty_rate, d$Infant_Mortality_Rate, use = "complete.obs")
}
boot_results_infant <- boot(data = merged_infant_numeric, statistic = boot_cor_infant, R = 1000)
print("Bootstrapped Confidence Interval for Infant Mortality Correlation:")
boot.ci(boot_results_infant, type = "perc")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Install required packages
# If not installed, uncomment the following lines to install the packages
# install.packages("tidycensus")
# install.packages("tidyverse")
# install.packages("readxl")
# install.packages("stringr")
# install.packages("sf")
# install.packages("ggplot2")
# install.packages("knitr")
# install.packages("dplyr")
# install.packages("boot")
# Load required packages
library(tidycensus)
library(tidyverse)
library(readxl)
library(stringr)
library(sf)
library(ggplot2)
library(knitr)
library(dplyr)
library(boot)
# Install Census API key
census_api_key("44c6364163f79ffa78a47e86d3e32a684ea0ed6f", install = TRUE, overwrite = TRUE)
# Define variables
vars <- c(
high_school = "B06009_003E",
total_households = "B05010_001E",
below_poverty = "B05010_002E"
)
year <- 2014
# Retrieve ACS Data
census_data <- get_acs(
geography = "state",
variables = vars,
year = year,
survey = "acs5"
)
# Display first few rows
kable(head(census_data), caption = "Raw Census Data")
# For checking the variable names
print("Unq Variable names in census data:")
unique(census_data$variable)
# Pivot and calculate poverty rate
census_wide <- census_data %>%
select(GEOID, NAME, variable, estimate) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
mutate(poverty_rate = B05010_002 / B05010_001)
# Display first few rows of processed data
print("Few Rows of Processed Census Data with Poverty Rate:")
kable(head(census_wide), caption = "Few Rows of Processed Census Data with Poverty Rate")
# Numerical description of poverty rates
print("Summary Statistics for State Poverty Rates:")
summary(census_wide$poverty_rate)
# Table showing poverty rate for each state
poverty_rate_table <- census_wide %>%
select(NAME, poverty_rate) %>%
arrange(desc(poverty_rate)) # Arrange for better readability
kable(poverty_rate_table, caption = "Poverty Rate by State (2014)")
#Bar Plot of Poverty Rate by State
ggplot(census_wide, aes(x = reorder(NAME, poverty_rate), y = poverty_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = paste0("Poverty Rate by State (", year, " ACS5)"),
x = "State", y = "Poverty Rate") +
theme_minimal()
# Scatter Plot of High School Graduates vs. Poverty Rate
ggplot(census_wide, aes(x = B06009_003, y = poverty_rate)) +
geom_point(color = "darkred", size = 3, alpha = 0.7) +
labs(title = paste0("High School Attainment vs Poverty Rate (", year, " ACS5)"),
x = "High School Graduates",
y = "Poverty Rate") +
theme_minimal()
# Load GHDx Meningitis data
file_path <- "./IHME_USA_COUNTY_INFECT_DIS_MORT_1980_2014_NATIONAL_Y2018M03D27.XLSX"
mg_raw <- read_xlsx(file_path, sheet = 'Meningitis', skip = 1)
# Print the column names of mg_raw for checking
print("Column names in raw meningitis data:")
print(names(mg_raw))
# Select only state-level data (FIPS < 100)
# Filter state-level and clean
mg_states_cleaned <- mg_raw %>%
filter(FIPS < 100) %>%
rename(State = Location) %>%
mutate(MR_2014 = as.numeric(str_remove(`Mortality Rate, 2014*`, '\\s*\\(.*\\)')))
# Display the first few rows of the cleaned state-level Meningitis data
kable(head(mg_states_cleaned), caption = "Cleaned State-Level Meningitis Mortality Data")
# # Poverty vs. Disease Correlation Plots
# ggplot(merged, aes(x = poverty_rate, y = MR_2014)) +
#   geom_point(color = "purple") +
#   geom_smooth(method = "lm", se = TRUE, color = "blue") +
#   labs(title = "Poverty Rate vs. Meningitis Mortality Rate (2014)", x = "Poverty Rate", y = "Meningitis Mortality") +
#   theme_minimal()
# Histogram of Meningitis Mortality
ggplot(mg_states_cleaned, aes(x = MR_2014)) +
geom_histogram(fill = "darkred", bins = 15) +
labs(title = "Distribution of Meningitis Mortality Rate (2014)", x = "Mortality Rate", y = "Count") +
theme_minimal()
# Merge and scatter plot with smooth line
merged_meningitis <- census_wide %>%
inner_join(mg_states_cleaned, by = c("NAME" = "State"))
# Scatter plot
ggplot(merged_meningitis, aes(x = poverty_rate, y = MR_2014)) +
geom_point(color = "purple") +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Poverty vs Meningitis Mortality (2014)", x = "Poverty Rate", y = "Meningitis Mortality") +
theme_minimal()
# Correlation with bootstrap CI
boot_cor <- function(data, indices) {
d <- data[indices, ]
cor(d$poverty_rate, d$MR_2014, use = "complete.obs")
}
boot_results <- boot(data = merged_meningitis, statistic = boot_cor, R = 1000)
boot.ci(boot_results, type = "perc")
# Load Diarrheal data
dd_raw <- read_xlsx(file_path, sheet = 'Diarrheal diseases', skip = 1)
dd_cleaned <- dd_raw %>%
filter(FIPS < 100) %>%
rename(State = Location) %>%
mutate(MR_2014 = as.numeric(str_remove(`Mortality Rate, 2014*`, '\\s*\\(.*\\)')))
merged_diarrhea <- census_wide %>%
inner_join(dd_cleaned, by = c("NAME" = "State"))
ggplot(merged_diarrhea, aes(x = poverty_rate, y = MR_2014)) +
geom_point(color = "darkorange") +
geom_smooth(method = "lm", color = "black") +
labs(title = "Poverty vs Diarrheal Mortality (2014)", x = "Poverty Rate", y = "Diarrheal Mortality") +
theme_minimal()
# Correlation
boot_results_dd <- boot(data = merged_diarrhea, statistic = boot_cor, R = 1000)
boot.ci(boot_results_dd, type = "perc")
infant_file <- "./infant_mortality_data.csv"
infant_raw <- read_csv(infant_file)
infant_2014 <- infant_raw %>%
filter(YEAR == 2014) %>%
select(STATE, RATE) %>%
rename(State_Abbr = STATE, Infant_Mortality_Rate = RATE)
fips_df <- fips_codes %>% distinct(state, state_code, state_name)
infant_fips <- infant_2014 %>%
left_join(fips_df, by = c("State_Abbr" = "state")) %>%
select(state_name, state_code, Infant_Mortality_Rate) %>%
rename(State = state_name, FIPS = state_code)
# Merge with poverty
merged_infant <- census_wide %>%
inner_join(infant_fips, by = c("GEOID" = "FIPS"))
glimpse(merged_infant)
merged_infant_numeric <- merged_infant %>%
mutate(Infant_Mortality_Rate = as.numeric(Infant_Mortality_Rate))
# Numerical description
print("Summary Statistics for State Infant Mortality Rates:")
summary(merged_infant_numeric$Infant_Mortality_Rate)
# Histogram of Infant Mortality Rates
ggplot(merged_infant_numeric, aes(x = Infant_Mortality_Rate)) +
geom_histogram(fill = "lightblue", bins = 15) +
labs(title = "Distribution of Infant Mortality Rate (2014)", x = "Infant Mortality Rate", y = "Count") +
theme_minimal()
# Quantify the relationship with bootstrapped confidence intervals
boot_cor_infant <- function(data, indices) {
d <- data[indices, ]
cor(d$poverty_rate, d$Infant_Mortality_Rate, use = "complete.obs")
}
boot_results_infant <- boot(data = merged_infant_numeric, statistic = boot_cor_infant, R = 1000)
print("Bootstrapped Confidence Interval for Infant Mortality Correlation:")
boot.ci(boot_results_infant, type = "perc")
# Histogram of state poverty rates and infant mortality rates
ggplot(merged_infant_numeric, aes(x = poverty_rate, y = Infant_Mortality_Rate)) +
geom_point(color = "orange") +
geom_smooth(method = "lm", color = "darkgreen") +
labs(title = "Poverty vs Infant Mortality (2014)", x = "Poverty Rate", y = "Infant Mortality Rate") +
theme_minimal()
# Pearson correlation
cor.test(merged_infant_numeric$poverty_rate, merged_infant_numeric$Infant_Mortality_Rate)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
# Install required packages
# If not installed, uncomment the following lines to install the packages
# install.packages("tidycensus")
# install.packages("tidyverse")
# install.packages("readxl")
# install.packages("stringr")
# install.packages("sf")
# install.packages("ggplot2")
# install.packages("knitr")
# install.packages("dplyr")
# install.packages("boot")
# Load required packages
library(tidycensus)
library(tidyverse)
library(readxl)
library(stringr)
library(sf)
library(ggplot2)
library(knitr)
library(dplyr)
library(boot)
# Install Census API key
census_api_key("44c6364163f79ffa78a47e86d3e32a684ea0ed6f", install = TRUE, overwrite = TRUE)
# Define variables
vars <- c(
high_school = "B06009_003E",
total_households = "B05010_001E",
below_poverty = "B05010_002E"
)
year <- 2014
# Retrieve ACS Data
census_data <- get_acs(
geography = "state",
variables = vars,
year = year,
survey = "acs5"
)
# Display first few rows
kable(head(census_data), caption = "Raw Census Data")
# For checking the variable names
print("Unq Variable names in census data:")
unique(census_data$variable)
# Pivot and calculate poverty rate
census_wide <- census_data %>%
select(GEOID, NAME, variable, estimate) %>%
pivot_wider(names_from = variable, values_from = estimate) %>%
mutate(poverty_rate = B05010_002 / B05010_001)
# Display first few rows of processed data
print("Few Rows of Processed Census Data with Poverty Rate:")
kable(head(census_wide), caption = "Few Rows of Processed Census Data with Poverty Rate")
# Numerical description of poverty rates
print("Summary Statistics for State Poverty Rates:")
summary(census_wide$poverty_rate)
# Table showing poverty rate for each state
poverty_rate_table <- census_wide %>%
select(NAME, poverty_rate) %>%
arrange(desc(poverty_rate)) # Arrange for better readability
kable(poverty_rate_table, caption = "Poverty Rate by State (2014)")
#Bar Plot of Poverty Rate by State
ggplot(census_wide, aes(x = reorder(NAME, poverty_rate), y = poverty_rate)) +
geom_bar(stat = "identity", fill = "steelblue") +
coord_flip() +
labs(title = paste0("Poverty Rate by State (", year, " ACS5)"),
x = "State", y = "Poverty Rate") +
theme_minimal()
# Scatter Plot of High School Graduates vs. Poverty Rate
ggplot(census_wide, aes(x = B06009_003, y = poverty_rate)) +
geom_point(color = "darkred", size = 3, alpha = 0.7) +
labs(title = paste0("High School Attainment vs Poverty Rate (", year, " ACS5)"),
x = "High School Graduates",
y = "Poverty Rate") +
theme_minimal()
# Load GHDx Meningitis data
file_path <- "./IHME_USA_COUNTY_INFECT_DIS_MORT_1980_2014_NATIONAL_Y2018M03D27.XLSX"
mg_raw <- read_xlsx(file_path, sheet = 'Meningitis', skip = 1)
# Print the column names of mg_raw for checking
print("Column names in raw meningitis data:")
print(names(mg_raw))
# Select only state-level data (FIPS < 100)
# Filter state-level and clean
mg_states_cleaned <- mg_raw %>%
filter(FIPS < 100) %>%
rename(State = Location) %>%
mutate(MR_2014 = as.numeric(str_remove(`Mortality Rate, 2014*`, '\\s*\\(.*\\)')))
# Display the first few rows of the cleaned state-level Meningitis data
kable(head(mg_states_cleaned), caption = "Cleaned State-Level Meningitis Mortality Data")
# # Poverty vs. Disease Correlation Plots
# ggplot(merged, aes(x = poverty_rate, y = MR_2014)) +
#   geom_point(color = "purple") +
#   geom_smooth(method = "lm", se = TRUE, color = "blue") +
#   labs(title = "Poverty Rate vs. Meningitis Mortality Rate (2014)", x = "Poverty Rate", y = "Meningitis Mortality") +
#   theme_minimal()
# Histogram of Meningitis Mortality
ggplot(mg_states_cleaned, aes(x = MR_2014)) +
geom_histogram(fill = "darkred", bins = 15) +
labs(title = "Distribution of Meningitis Mortality Rate (2014)", x = "Mortality Rate", y = "Count") +
theme_minimal()
# Merge and scatter plot with smooth line
merged_meningitis <- census_wide %>%
inner_join(mg_states_cleaned, by = c("NAME" = "State"))
# Scatter plot
ggplot(merged_meningitis, aes(x = poverty_rate, y = MR_2014)) +
geom_point(color = "purple") +
geom_smooth(method = "lm", color = "blue") +
labs(title = "Poverty vs Meningitis Mortality (2014)", x = "Poverty Rate", y = "Meningitis Mortality") +
theme_minimal()
# Correlation with bootstrap CI
boot_cor <- function(data, indices) {
d <- data[indices, ]
cor(d$poverty_rate, d$MR_2014, use = "complete.obs")
}
boot_results <- boot(data = merged_meningitis, statistic = boot_cor, R = 1000)
boot.ci(boot_results, type = "perc")
# Load Diarrheal data
dd_raw <- read_xlsx(file_path, sheet = 'Diarrheal diseases', skip = 1)
dd_cleaned <- dd_raw %>%
filter(FIPS < 100) %>%
rename(State = Location) %>%
mutate(MR_2014 = as.numeric(str_remove(`Mortality Rate, 2014*`, '\\s*\\(.*\\)')))
merged_diarrhea <- census_wide %>%
inner_join(dd_cleaned, by = c("NAME" = "State"))
ggplot(merged_diarrhea, aes(x = poverty_rate, y = MR_2014)) +
geom_point(color = "darkorange") +
geom_smooth(method = "lm", color = "black") +
labs(title = "Poverty vs Diarrheal Mortality (2014)", x = "Poverty Rate", y = "Diarrheal Mortality") +
theme_minimal()
# Correlation
boot_results_dd <- boot(data = merged_diarrhea, statistic = boot_cor, R = 1000)
boot.ci(boot_results_dd, type = "perc")
infant_file <- "./infant_mortality_data.csv"
infant_raw <- read_csv(infant_file)
infant_2014 <- infant_raw %>%
filter(YEAR == 2014) %>%
select(STATE, RATE) %>%
rename(State_Abbr = STATE, Infant_Mortality_Rate = RATE)
fips_df <- fips_codes %>% distinct(state, state_code, state_name)
infant_fips <- infant_2014 %>%
left_join(fips_df, by = c("State_Abbr" = "state")) %>%
select(state_name, state_code, Infant_Mortality_Rate) %>%
rename(State = state_name, FIPS = state_code)
# Merge with poverty
merged_infant <- census_wide %>%
inner_join(infant_fips, by = c("GEOID" = "FIPS"))
glimpse(merged_infant)
merged_infant_numeric <- merged_infant %>%
mutate(Infant_Mortality_Rate = as.numeric(Infant_Mortality_Rate))
# Numerical description
print("Summary Statistics for State Infant Mortality Rates:")
summary(merged_infant_numeric$Infant_Mortality_Rate)
# Histogram of Infant Mortality Rates
ggplot(merged_infant_numeric, aes(x = Infant_Mortality_Rate)) +
geom_histogram(fill = "lightblue", bins = 15) +
labs(title = "Distribution of Infant Mortality Rate (2014)", x = "Infant Mortality Rate", y = "Count") +
theme_minimal()
# Quantify the relationship with bootstrapped confidence intervals
boot_cor_infant <- function(data, indices) {
d <- data[indices, ]
cor(d$poverty_rate, d$Infant_Mortality_Rate, use = "complete.obs")
}
boot_results_infant <- boot(data = merged_infant_numeric, statistic = boot_cor_infant, R = 1000)
print("Bootstrapped Confidence Interval for Infant Mortality Correlation:")
boot.ci(boot_results_infant, type = "perc")
# Histogram of state poverty rates and infant mortality rates
ggplot(merged_infant_numeric, aes(x = poverty_rate, y = Infant_Mortality_Rate)) +
geom_point(color = "orange") +
geom_smooth(method = "lm", color = "darkgreen") +
labs(title = "Poverty vs Infant Mortality (2014)", x = "Poverty Rate", y = "Infant Mortality Rate") +
theme_minimal()
# Pearson correlation
cor.test(merged_infant_numeric$poverty_rate, merged_infant_numeric$Infant_Mortality_Rate)
# Install necessary packages (run this only once)
install.packages(c("tidyverse", "sf", "leaflet", "ggplot2", "viridis", "readr", "sp"))
# Load the packages
library(tidyverse)
library(sf)
# Install necessary packages (run this only once)
install.packages(c("tidyverse", "sf", "leaflet", "ggplot2", "viridis", "readr", "sp"))
# Load the packages
library(tidyverse)
library(sf)
library(leaflet)
library(ggplot2)
# View structure
glimpse(shooting_data)
library(viridis)
# Install necessary packages (run this only once)
install.packages(c("tidyverse", "sf", "leaflet", "ggplot2", "viridis", "readr", "sp"))
# Load the packages
library(tidyverse)
library(sf)
library(leaflet)
library(ggplot2)
library(viridis)
library(readr)
library(sp)
